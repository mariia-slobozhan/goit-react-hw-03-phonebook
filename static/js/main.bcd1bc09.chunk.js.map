{"version":3,"sources":["Components/Filter/Filter.module.css","Components/PhonebookForm/PhonebookForm.module.css","Components/PhonebookForm/PhonebookForm.js","Components/ContactItem/ContactItem.js","Components/ContactsList/ContactsList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactItem/ContactItem.module.css"],"names":["module","exports","PhonebookForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","addNewContact","resetForm","this","onSubmit","className","s","label","input","type","pattern","title","required","onChange","button","Component","ContactItem","tel","id","onDeleteContact","item","onClick","ContactList","items","map","uuidv4","Filter","App","contacts","filter","contact","prevState","normalizedContact","toLowerCase","some","el","alert","changeFilter","getVisiableContacts","normalizedContacts","includes","deleteContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visiableContacts","list","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcd1bc09.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__16OLC\",\"input\":\"Filter_input__1b7D5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"PhonebookForm_label__37x0Y\",\"input\":\"PhonebookForm_input__ndEHy\",\"button\":\"PhonebookForm_button__O9vNV\"};","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./PhonebookForm.module.css\";\r\n\r\nexport default class PhonebookForm extends Component {\r\n  static propTypes = {\r\n    addNewContact: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.addNewContact(this.state);\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { handleSubmit, handleChange } = this;\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleChange}\r\n            value={name}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleChange}\r\n            value={number}\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactItem.module.css\";\r\n\r\nexport default function ContactItem({ name, tel, id, onDeleteContact }) {\r\n  return (\r\n    <li className={s.item} id={id}>\r\n      <span className={s.name}>{name}</span>\r\n      <span className={s.tel}>{tel}</span>\r\n      <button\r\n        className={s.button}\r\n        onClick={() => onDeleteContact(id)}\r\n        type=\"button\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string,\r\n  tel: PropTypes.string,\r\n  id: PropTypes.string,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport ContactItem from \"../ContactItem/ContactItem\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ContactList({ items, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {items.map((item) => (\r\n        <ContactItem\r\n          key={uuidv4()}\r\n          id={item.id}\r\n          name={item.name}\r\n          tel={item.number}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PhonebookForm from \"./Components/PhonebookForm/PhonebookForm\";\nimport ContactList from \"./Components/ContactsList/ContactsList\";\nimport Filter from \"./Components/Filter/Filter\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addNewContact = (contact) => {\n    this.setState((prevState) => {\n      const normalizedContact = contact.name.toLowerCase();\n      return prevState.contacts.some(\n        (el) => el.name.toLowerCase() === normalizedContact\n      )\n        ? alert(`${contact.name} is already in contact list`)\n        : { contacts: [...prevState.contacts, { ...contact, id: uuidv4() }] };\n    });\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getVisiableContacts = () => {\n    const normalizedContacts = this.state.filter.toLowerCase();\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedContacts)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const visiableContacts = this.getVisiableContacts();\n    const { contacts } = this.state;\n    const { addNewContact, changeFilter, deleteContact } = this;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <PhonebookForm list={contacts} addNewContact={addNewContact} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={changeFilter} />\n        <ContactList items={visiableContacts} onDeleteContact={deleteContact} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__2AdyA\",\"name\":\"ContactItem_name__1xcUI\",\"tel\":\"ContactItem_tel__1OdXh\",\"button\":\"ContactItem_button__dZu6y\"};"],"sourceRoot":""}